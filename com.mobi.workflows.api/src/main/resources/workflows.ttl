@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix mprov: <http://mobi.com/ontologies/prov#> .
@prefix mcat: <http://mobi.com/ontologies/catalog#> .
@prefix vfs: <http://mobi.com/ontologies/documents#> .
@prefix wf: <https://mobi.solutions/ontologies/form#>.
@prefix : <http://mobi.solutions/ontologies/workflows#> .
@base <http://mobi.solutions/ontologies/workflows> .

<http://mobi.solutions/ontologies/workflows> a owl:Ontology ;
    owl:versionIRI <http://mobi.solutions/ontologies/workflows#2.0> ;
    owl:imports <http://mobi.com/ontologies/prov>, <http://mobi.com/ontologies/documents>, <http://mobi.com/ontologies/catalog> ;
    rdfs:label "The Mobi Workflows Ontology"@en ;
    rdfs:comment "The Mobi Workflows ontology is designed to represent collections of actions that are triggered manually, by a schedule, or by events occurring in the system."@en ;
    dct:creator [foaf:name "Khalil Savoy"] ;
    foaf:maker [foaf:name "Mobi"; foaf:homepage <https://mobi.inovexcorp.com/>] ;
    dct:modified "2025-1-31"^^xsd:date .

# Workflow

:WorkflowRecord a owl:Class;
    rdfs:subClassOf mcat:VersionedRDFRecord;
    rdfs:label "Workflow Record"@en;
    rdfs:comment "A collection of RDF data that defines a Workflow resource."@en.

:workflowIRI a owl:DatatypeProperty, owl:FunctionalProperty;
    rdfs:label "Workflow IRI"@en;
    rdfs:comment "The latest Workflow IRI on the master branch."@en;
    rdfs:domain :WorkflowRecord;
    rdfs:range <http://mobi.com/ontologies/mobi#Identifier> .

:Workflow a owl:Class, sh:NodeShape, rdfs:Class ;
    rdfs:label "Workflow"@en ;
    rdfs:comment "A specification of a set of actions to execute when triggered."@en ;
    sh:property :triggerPropertyShape, :actionPropertyShape, :NoEntryToChildActionsPropertyShape .

# Workflow Properties and Shapes

:triggerPropertyShape a sh:PropertyShape ;
    sh:path :hasTrigger ;
    sh:maxCount 1 ;
    sh:class :Trigger.

:hasTrigger a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "has trigger"@en ;
    rdfs:comment "A trigger for a specific Workflow."@en ;
    rdfs:domain :Workflow ;
    rdfs:range :Trigger .

:actionPropertyShape a sh:PropertyShape ;
    sh:path :hasAction ;
    sh:minCount 1 ;
    sh:class :Action .

:NoEntryToChildActionsPropertyShape a sh:PropertyShape ;
    sh:message "Entry Actions must not be child Actions"@en ;
    sh:path :hasAction ;
    sh:sparql [
        a sh:SPARQLConstraint ;
        sh:select """
            SELECT $this ?value
            WHERE {
                $this $path ?value .
                FILTER EXISTS {
                    ?action <http://mobi.solutions/ontologies/workflows#hasChildAction> ?value .
                }
            }
        """
    ] .
    # TODO: Once RDF4J supports sh:oneOrMorePath, can use this
    #sh:path ( :hasAction [ sh:oneOrMorePath :hasChildAction ] ) ;
    #sh:disjoint :hasAction .

:hasAction a owl:ObjectProperty ;
    rdfs:label "has entry action"@en ;
    rdfs:comment "A starting Action for a specific Workflow."@en ;
    # TODO update when we figure out how to handle unions in ORM service
    rdfs:domain :Workflow ;
    rdfs:range :Action .

:latestActivity a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "latest activity"@en ;
    rdfs:comment "The latest activity carried out by a Workflow Record."@en ;
    rdfs:domain :WorkflowRecord ;
    rdfs:range :WorkflowExecutionActivity .

:active a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "active"@en ;
    rdfs:comment "Whether a specific Workflow should execute when triggered."@en ;
    rdfs:domain :WorkflowRecord ;
    rdfs:range xsd:boolean .

:hasActionExecution a owl:ObjectProperty ;
    rdfs:label "has action execution"@en ;
    rdfs:comment "Points to the execution of a particular action."@en ;
    rdfs:domain :WorkflowExecutionActivity ;
    rdfs:range :ActionExecution .

# Trigger

:Trigger a owl:Class ;
    rdfs:label "Trigger"@en ;
    rdfs:comment "A specification on when a Workflow should be executed."@en .

# EventTrigger

:EventTrigger a owl:Class ;
    rdfs:subClassOf :Trigger ;
    rdfs:label "Event Trigger"@en ;
    rdfs:comment "A specification for executing a Workflow when an Event occurs in the application."@en .

# Action

:Action a owl:Class, sh:NodeShape, rdfs:Class ;
    rdfs:label "Action"@en ;
    rdfs:comment "A set of instructions that should be executed when a Workflow is running."@en ;
    sh:property :HasChildActionPropertyShape, :NoCyclesPropertyShape, :NoDanglingActionsPropertyShape .

# Action Properties and Shapes

:HasChildActionPropertyShape a sh:PropertyShape ;
    sh:message "Child of an Action must be another Action"@en ;
    sh:path :hasChildAction ;
    sh:class :Action .

:NoCyclesPropertyShape a sh:PropertyShape ;
    sh:message "There cannot be a cycle among child Actions."@en ;
    sh:path :hasChildAction ;
    sh:sparql [
      a sh:SPARQLConstraint ;
      sh:select """
        SELECT $this ?value
        WHERE {
          $this $PATH ?value .
          FILTER EXISTS {
            ?value <http://mobi.solutions/ontologies/workflows#hasChildAction>+ $this .
          }
        }
      """
    ] .
    # TODO: Once RDF4J supports sh:oneOrMorePath, can use this
    #sh:path [ sh:oneOrMorePath [ sh:inversePath :hasChildAction ] ] ;
    #sh:disjoint :hasChildAction .

:NoDanglingActionsPropertyShape a sh:PropertyShape ;
    sh:message "An Action must be a child of another Action or an entry point for the Workflow"@en ;
    sh:path [ sh:alternativePath ( [ sh:inversePath :hasAction ] [ sh:inversePath :hasChildAction ] ) ] ;
    sh:minCount 1 .

:hasChildAction a owl:ObjectProperty, owl:IrreflexiveProperty, owl:AsymmetricProperty ;
    rdfs:label "has child action"@en ;
    rdfs:comment "An Action that should be executed after the current one."@en ;
    rdfs:domain :Action ;
    rdfs:range :Action .

# WorkflowExecutionActivity

:WorkflowExecutionActivity a owl:Class ;
    rdfs:subClassOf prov:Activity ;
    mprov:actionWord "executed"@en ;
    mprov:provAction prov:used ;
    dct:title "Workflow Execution Activity"@en ;
    dct:description "A WorkflowExecutionActivity represents an individual run of a Workflow."@en .

# ActionExecution

:ActionExecution a owl:Class ;
    dct:title "Action Execution"@en ;
    dct:description "An Action Execution represents the execution of a Workflow Action."@en .

:succeeded a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "succeeded"@en ;
    rdfs:comment "Whether or not the workflow execution succeeded."@en ;
    # TODO update when we figure out how to handle unions in ORM service
    rdfs:domain :WorkflowRecord, :WorkflowExecutionActivity, :ActionExecution;
    rdfs:range xsd:boolean .

:logs a owl:ObjectProperty ;
    rdfs:label "logs"@en ;
    rdfs:comment "The BinaryFile for the log output from executing a Workflow."@en ;
    # TODO update when we figure out how to handle unions in ORM service
    rdfs:domain :WorkflowExecutionActivity, :ActionExecution ;
    rdfs:range vfs:BinaryFile .

:startedAt a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "started at"@en ;
    rdfs:comment "The timestamp that an executed action took place."@en ;
    rdfs:domain :ActionExecution ;
    rdfs:range xsd:dateTime .

:endedAt a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "ended at"@en ;
    rdfs:comment "The timestamp that an executed action completed."@en ;
    rdfs:domain :ActionExecution ;
    rdfs:range xsd:dateTime .

:aboutAction a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "about action"@en ;
    rdfs:comment "The Action that was executed."@en ;
    rdfs:domain :ActionExecution ;
    rdfs:range :Action .