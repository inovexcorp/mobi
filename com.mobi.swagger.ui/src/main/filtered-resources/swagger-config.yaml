resourcePackages:
  - com.mobi.ontology.rest
  - com.mobi.catalog.rest
  - com.mobi.dataset.rest
  - com.mobi.document.translator.rest
  - com.mobi.etl.rest
  - com.mobi.explorable.dataset.rest
  - com.mobi.jaas.rest
  - com.mobi.platform.config.rest
  - com.mobi.setting.rest
  - com.mobi.prov.rest
  - com.mobi.rest.security
  - com.mobi.rest.util
  - com.mobi.security.policy.rest
  - com.mobi.sparql.rest
  - com.mobi.shapes.rest
  - com.mobi.workflows.rest
  - com.mobi.shacl.form.rest
prettyPrint: true
cacheTTL: 0
openAPI:
  info:
    version: ${project.version}
    title: Mobi
    description: 'Mobi REST API Documentation'
  servers:
    - url: /mobirest
  components:
    securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
      basicAuth:
        type: http
        scheme: basic
    responses:
      UnauthorizedError:
        description: Access token is missing or invalid
    schemas:
      Keywords:
        type: array
        items:
          type: string
      IRIs:
        type: array
        items:
          $ref: '#/components/schemas/IRI'
      IRI:
        type: string
        format: uri
      JsonLdObjects:
        type: array
        items:
          $ref: '#/components/schemas/JsonLdObject'
      JsonLdObject:
        type: object
        properties:
          "@id":
            type: string
            format: uri
          "@type":
            type: array
            minItems: 1
            items:
              type: string
              format: uri
        additionalProperties:
          type: array
          minItems: 1
          items:
            oneOf:
              - $ref: '#/components/schemas/JsonLdIdValue'
              - $ref: '#/components/schemas/JsonLdLiteralValue'
        required:
          - "@id"
      JsonLdIdValue:
        type: object
        properties:
          "@id":
            type: string
            format: uri
        required:
          - "@id"
      JsonLdLiteralValue:
        type: object
        properties:
          "@value":
            type: string
          "@language":
            type: string
          "@datatype":
            type: string
            format: uri
        required:
          - "@value"
      CommitDataArr:
        type: array
        items:
          $ref: '#/components/schemas/CommitData'
      CommitData:
        type: object
        properties:
          id:
            type: string
            format: uri
          creator:
            $ref: '#/components/schemas/UserData'
          date:
            type: string
          message:
            type: string
          base:
            type: string
            format: uri
          branch:
            type: string
            format: uri
          auxiliary:
            type: string
            format: uri
      UserData:
        type: object
        properties:
          firstName:
            type: string
          lastName:
            type: string
          username:
            type: string
      Entity:
        type: object
        properties:
          iri:
            type: string
            description: The IRI of the entity
            example: http://example.org/entity1
          entityName:
            type: string
            description: The name of the entity
            example: Example Entity 1
          types:
            type: array
            items:
              type: string
              description: A list of RDF types for the entity
              example: http://www.w3.org/2000/01/rdf-schema#Class
          description:
            type: string
            nullable: true
            description: Description of the entity, calculated using a prioritized list of annotations
            example: This is an example description for Entity 1.
          sourceRecord:
            $ref: '#/components/schemas/SourceRecord'
      SourceRecord:
        type: object
        properties:
          title:
            type: string
            description: The title of the source record
            example: Entity 1 Source Record
          iri:
            type: string
            description: The IRI of the source record
            example: http://example.org/source-record1
          type:
            type: string
            description: The type of the source record (subclass of VersionedRDFRecord)
            example: http://example.org/VersionedRDFRecord

  security:
    - bearerAuth: [ ]
    - basicAuth: []